buildscript {
	repositories {
		mavenCentral()
		jcenter()
	}
	dependencies {
		classpath 'edu.sc.seis.gradle:launch4j:2.4.2'
	}
}

plugins {
	id 'org.jetbrains.kotlin.jvm' version '1.2.10'
	id 'com.github.johnrengelman.shadow' version '2.0.1'
	id 'com.palantir.docker' version '0.17.2'
	id 'java'
	id 'application'
}

apply plugin: 'com.palantir.docker'

// For building windows executable. See https://github.com/TheBoegl/gradle-launch4j
apply plugin: 'edu.sc.seis.launch4j'

group = 'com.symmetrylabs'
version = '1.0'

mainClassName = 'com.symmetrylabs.slstudio.SLStudio'
//mainClassName = 'com.symmetrylabs.slstudio.SLHeadless'

run {
	jvmArgs '-Dcom.sun.management.jmxremote -Dcom.sun.management.jmxremote.port=12345 -Dcom.sun.management.jmxremote.authenticate=false -Dcom.sun.management.jmxremote.ssl=false -Djava.awt.headless=true'
}

docker {
	name 'symmetrylabs/' + project.name.toLowerCase() + ':latest'
	tags version
	dockerfile project.file('docker/Dockerfile')

	files tasks.distTar.outputs, project.files('docker'), project.files('.')
	copySpec.exclude 'build'

	if (System.getProperty("buildArgs") != null) {
		buildArgs System.getProperty("buildArgs").split(/\s+/).collectEntries {
			def kvp = it.split('=')
			[(kvp[0]): kvp[1]]
		}
	}
}

repositories {
	mavenCentral()

	maven { url 'https://jitpack.io' }

	// needed for aparapi dependency
	maven { url 'https://oss.sonatype.org/content/repositories/snapshots' }
}

dependencies {
	// https://mvnrepository.com/artifact/org.processing/core
	compile(group: 'org.processing', name: 'core', version: '3.3.6') {
		exclude group: 'org.jogamp.gluegen'
		exclude group: 'org.jogamp.jogl'
	}

	// https://mvnrepository.com/artifact/com.harium/kdtree
	compile group: 'com.harium', name: 'kdtree', version: '1.0.0'

	// https://mvnrepository.com/artifact/org.javassist/javassist
	compile group: 'org.javassist', name: 'javassist', version: '3.22.0-GA'

	// https://mvnrepository.com/artifact/com.google.guava/guava
	compile group: 'com.google.guava', name: 'guava', version: '23.5-jre'

	// https://mvnrepository.com/artifact/org.apache.commons/commons-math3
	compile group: 'org.apache.commons', name: 'commons-math3', version: '3.6.1'

	// https://mvnrepository.com/artifact/uk.co.xfactory-librarians/coremidi4j
	compile group: 'uk.co.xfactory-librarians', name: 'coremidi4j', version: '0.9'

	// https://mvnrepository.com/artifact/com.google.code.gson/gson
	compile group: 'com.google.code.gson', name: 'gson', version: '2.8.2'

	// https://mvnrepository.com/artifact/uk.co.xfactory-librarians/coremidi4j
	compile group: 'uk.co.xfactory-librarians', name: 'coremidi4j', version: '0.9'

	// https://mvnrepository.com/artifact/org.jetbrains.kotlin/kotlin-stdlib
	compile group: 'org.jetbrains.kotlin', name: 'kotlin-stdlib', version: '1.2.10'

	// https://mvnrepository.com/artifact/io.github.lukehutch/fast-classpath-scanner
	compile group: 'io.github.lukehutch', name: 'fast-classpath-scanner', version: '2.9.3'

	// lock aparapi-jni snapshot version
	// https://oss.sonatype.org/content/repositories/snapshots/com/aparapi/aparapi-jni/
	compile "com.aparapi:aparapi-jni:1.1.3-20180211.063116-7"

	// https://github.com/SymmetryLabs/aparapi
	compile 'com.github.SymmetryLabs:aparapi:b6fffad'

	compile files('libs/jogamp-fat.jar')

	// TODO: Add gradle to LX and P3LX so our cross-project dependencies work better
	compile files('libs/P3LX.jar')
}

jar {
	exclude('**/*.swp')
	exclude('**/*.swo')
}
